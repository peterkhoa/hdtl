
// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: ``
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Data Source=112.213.84.121;Initial Catalog=hdtl;Persist Security Info=True;User ID=hdtl;Password=hdtl123!@#`
//     Schema:                 ``
//     Include Views:          `False`

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;


namespace hoachdinhtuonglai.Data.Core
{
	public partial class PetaPocoDB : Database
	{
		public PetaPocoDB() 
			: base("")
		{
			CommonConstruct();
		}

		public PetaPocoDB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			PetaPocoDB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static PetaPocoDB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new PetaPocoDB();
        }

		[ThreadStatic] static PetaPocoDB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        
		public class Record<T> where T:new()
		{
			public static PetaPocoDB repo { get { return PetaPocoDB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }
			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }
			
			private Dictionary<string,bool> ModifiedColumns;
			private void OnLoaded()
			{
				ModifiedColumns = new Dictionary<string,bool>();
			}
			protected void MarkColumnModified(string column_name)
			{
				if (ModifiedColumns!=null)
					ModifiedColumns[column_name]=true;
			}
			public int Update() 
			{ 
				if (ModifiedColumns==null)
					return repo.Update(this); 

				int retv = repo.Update(this, ModifiedColumns.Keys);
				ModifiedColumns.Clear();
				return retv;
			}
			public void Save() 
			{ 
				if (repo.IsNew(this))
					repo.Insert(this);
				else
					Update();
			}
		}
	}
	

    
	[TableName("Categories")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class Category : PetaPocoDB.Record<Category>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public string CateName 
		{ 
			get
			{
				return _CateName;
			}
			set
			{
				_CateName = value;
				MarkColumnModified("CateName");
			}
		}
		string _CateName;

        [Column] 
		public string CateSlugName 
		{ 
			get
			{
				return _CateSlugName;
			}
			set
			{
				_CateSlugName = value;
				MarkColumnModified("CateSlugName");
			}
		}
		string _CateSlugName;

        [Column] 
		public int? Order 
		{ 
			get
			{
				return _Order;
			}
			set
			{
				_Order = value;
				MarkColumnModified("Order");
			}
		}
		int? _Order;

        [Column] 
		public bool? Active 
		{ 
			get
			{
				return _Active;
			}
			set
			{
				_Active = value;
				MarkColumnModified("Active");
			}
		}
		bool? _Active;

	}
    
	[TableName("ActionLog")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class ActionLog : PetaPocoDB.Record<ActionLog>  
    {
        [Column] 
		public long ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		long _ID;

        [Column] 
		public long AuthorID 
		{ 
			get
			{
				return _AuthorID;
			}
			set
			{
				_AuthorID = value;
				MarkColumnModified("AuthorID");
			}
		}
		long _AuthorID;

        [Column] 
		public long PerformOnObjectID 
		{ 
			get
			{
				return _PerformOnObjectID;
			}
			set
			{
				_PerformOnObjectID = value;
				MarkColumnModified("PerformOnObjectID");
			}
		}
		long _PerformOnObjectID;

        [Column] 
		public int ObjectTypeID 
		{ 
			get
			{
				return _ObjectTypeID;
			}
			set
			{
				_ObjectTypeID = value;
				MarkColumnModified("ObjectTypeID");
			}
		}
		int _ObjectTypeID;

        [Column] 
		public string ShortDescription 
		{ 
			get
			{
				return _ShortDescription;
			}
			set
			{
				_ShortDescription = value;
				MarkColumnModified("ShortDescription");
			}
		}
		string _ShortDescription;

        [Column] 
		public DateTime Date 
		{ 
			get
			{
				return _Date;
			}
			set
			{
				_Date = value;
				MarkColumnModified("Date");
			}
		}
		DateTime _Date;

        [Column] 
		public string Username 
		{ 
			get
			{
				return _Username;
			}
			set
			{
				_Username = value;
				MarkColumnModified("Username");
			}
		}
		string _Username;

        [Column] 
		public string Href 
		{ 
			get
			{
				return _Href;
			}
			set
			{
				_Href = value;
				MarkColumnModified("Href");
			}
		}
		string _Href;

        [Column] 
		public long TargetAccount 
		{ 
			get
			{
				return _TargetAccount;
			}
			set
			{
				_TargetAccount = value;
				MarkColumnModified("TargetAccount");
			}
		}
		long _TargetAccount;

        [Column] 
		public string XCommentID 
		{ 
			get
			{
				return _XCommentID;
			}
			set
			{
				_XCommentID = value;
				MarkColumnModified("XCommentID");
			}
		}
		string _XCommentID;

        [Column] 
		public string ToUser 
		{ 
			get
			{
				return _ToUser;
			}
			set
			{
				_ToUser = value;
				MarkColumnModified("ToUser");
			}
		}
		string _ToUser;

        [Column] 
		public bool? IsViewed 
		{ 
			get
			{
				return _IsViewed;
			}
			set
			{
				_IsViewed = value;
				MarkColumnModified("IsViewed");
			}
		}
		bool? _IsViewed;

	}
    
	[TableName("AccountRole")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class AccountRole : PetaPocoDB.Record<AccountRole>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

        [Column] 
		public string Description 
		{ 
			get
			{
				return _Description;
			}
			set
			{
				_Description = value;
				MarkColumnModified("Description");
			}
		}
		string _Description;

	}
    
	[TableName("AccountInRole")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class AccountInRole : PetaPocoDB.Record<AccountInRole>  
    {
        [Column] 
		public long ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		long _ID;

        [Column] 
		public long AccountID 
		{ 
			get
			{
				return _AccountID;
			}
			set
			{
				_AccountID = value;
				MarkColumnModified("AccountID");
			}
		}
		long _AccountID;

        [Column] 
		public int RoleID 
		{ 
			get
			{
				return _RoleID;
			}
			set
			{
				_RoleID = value;
				MarkColumnModified("RoleID");
			}
		}
		int _RoleID;

        [Column] 
		public string RoleName 
		{ 
			get
			{
				return _RoleName;
			}
			set
			{
				_RoleName = value;
				MarkColumnModified("RoleName");
			}
		}
		string _RoleName;

	}
    
	[TableName("Account")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class Account : PetaPocoDB.Record<Account>  
    {
        [Column] 
		public long ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		long _ID;

        [Column] 
		public string Username 
		{ 
			get
			{
				return _Username;
			}
			set
			{
				_Username = value;
				MarkColumnModified("Username");
			}
		}
		string _Username;

        [Column] 
		public string Email 
		{ 
			get
			{
				return _Email;
			}
			set
			{
				_Email = value;
				MarkColumnModified("Email");
			}
		}
		string _Email;

        [Column] 
		public string Password 
		{ 
			get
			{
				return _Password;
			}
			set
			{
				_Password = value;
				MarkColumnModified("Password");
			}
		}
		string _Password;

        [Column] 
		public string FullName 
		{ 
			get
			{
				return _FullName;
			}
			set
			{
				_FullName = value;
				MarkColumnModified("FullName");
			}
		}
		string _FullName;

        [Column] 
		public DateTime? Birthday 
		{ 
			get
			{
				return _Birthday;
			}
			set
			{
				_Birthday = value;
				MarkColumnModified("Birthday");
			}
		}
		DateTime? _Birthday;

        [Column] 
		public string Address 
		{ 
			get
			{
				return _Address;
			}
			set
			{
				_Address = value;
				MarkColumnModified("Address");
			}
		}
		string _Address;

        [Column] 
		public DateTime? LastLogin 
		{ 
			get
			{
				return _LastLogin;
			}
			set
			{
				_LastLogin = value;
				MarkColumnModified("LastLogin");
			}
		}
		DateTime? _LastLogin;

        [Column] 
		public bool? Active 
		{ 
			get
			{
				return _Active;
			}
			set
			{
				_Active = value;
				MarkColumnModified("Active");
			}
		}
		bool? _Active;

        [Column] 
		public string Yahoo 
		{ 
			get
			{
				return _Yahoo;
			}
			set
			{
				_Yahoo = value;
				MarkColumnModified("Yahoo");
			}
		}
		string _Yahoo;

        [Column] 
		public string Skype 
		{ 
			get
			{
				return _Skype;
			}
			set
			{
				_Skype = value;
				MarkColumnModified("Skype");
			}
		}
		string _Skype;

        [Column] 
		public string Facebook 
		{ 
			get
			{
				return _Facebook;
			}
			set
			{
				_Facebook = value;
				MarkColumnModified("Facebook");
			}
		}
		string _Facebook;

        [Column] 
		public string School 
		{ 
			get
			{
				return _School;
			}
			set
			{
				_School = value;
				MarkColumnModified("School");
			}
		}
		string _School;

        [Column] 
		public string Company 
		{ 
			get
			{
				return _Company;
			}
			set
			{
				_Company = value;
				MarkColumnModified("Company");
			}
		}
		string _Company;

        [Column] 
		public long? Exp 
		{ 
			get
			{
				return _Exp;
			}
			set
			{
				_Exp = value;
				MarkColumnModified("Exp");
			}
		}
		long? _Exp;

        [Column] 
		public string Dream 
		{ 
			get
			{
				return _Dream;
			}
			set
			{
				_Dream = value;
				MarkColumnModified("Dream");
			}
		}
		string _Dream;

        [Column] 
		public string SoThich 
		{ 
			get
			{
				return _SoThich;
			}
			set
			{
				_SoThich = value;
				MarkColumnModified("SoThich");
			}
		}
		string _SoThich;

        [Column] 
		public string Province 
		{ 
			get
			{
				return _Province;
			}
			set
			{
				_Province = value;
				MarkColumnModified("Province");
			}
		}
		string _Province;

        [Column] 
		public string ProvinceSlug 
		{ 
			get
			{
				return _ProvinceSlug;
			}
			set
			{
				_ProvinceSlug = value;
				MarkColumnModified("ProvinceSlug");
			}
		}
		string _ProvinceSlug;

        [Column] 
		public string SchoolSlug 
		{ 
			get
			{
				return _SchoolSlug;
			}
			set
			{
				_SchoolSlug = value;
				MarkColumnModified("SchoolSlug");
			}
		}
		string _SchoolSlug;

        [Column] 
		public string Avatar 
		{ 
			get
			{
				return _Avatar;
			}
			set
			{
				_Avatar = value;
				MarkColumnModified("Avatar");
			}
		}
		string _Avatar;

        [Column] 
		public string Slogan 
		{ 
			get
			{
				return _Slogan;
			}
			set
			{
				_Slogan = value;
				MarkColumnModified("Slogan");
			}
		}
		string _Slogan;

        [Column] 
		public string City 
		{ 
			get
			{
				return _City;
			}
			set
			{
				_City = value;
				MarkColumnModified("City");
			}
		}
		string _City;

        [Column] 
		public string PhoneNumber 
		{ 
			get
			{
				return _PhoneNumber;
			}
			set
			{
				_PhoneNumber = value;
				MarkColumnModified("PhoneNumber");
			}
		}
		string _PhoneNumber;

        [Column] 
		public string Location 
		{ 
			get
			{
				return _Location;
			}
			set
			{
				_Location = value;
				MarkColumnModified("Location");
			}
		}
		string _Location;

        [Column] 
		public string Gender 
		{ 
			get
			{
				return _Gender;
			}
			set
			{
				_Gender = value;
				MarkColumnModified("Gender");
			}
		}
		string _Gender;

        [Column] 
		public string FirstName 
		{ 
			get
			{
				return _FirstName;
			}
			set
			{
				_FirstName = value;
				MarkColumnModified("FirstName");
			}
		}
		string _FirstName;

        [Column] 
		public string LastName 
		{ 
			get
			{
				return _LastName;
			}
			set
			{
				_LastName = value;
				MarkColumnModified("LastName");
			}
		}
		string _LastName;

        [Column] 
		public string IP 
		{ 
			get
			{
				return _IP;
			}
			set
			{
				_IP = value;
				MarkColumnModified("IP");
			}
		}
		string _IP;

        [Column] 
		public DateTime? JoinDate 
		{ 
			get
			{
				return _JoinDate;
			}
			set
			{
				_JoinDate = value;
				MarkColumnModified("JoinDate");
			}
		}
		DateTime? _JoinDate;

	}
    
	[TableName("Voting")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class Voting : PetaPocoDB.Record<Voting>  
    {
        [Column] 
		public long ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		long _ID;

        [Column] 
		public long ObjID 
		{ 
			get
			{
				return _ObjID;
			}
			set
			{
				_ObjID = value;
				MarkColumnModified("ObjID");
			}
		}
		long _ObjID;

        [Column] 
		public string Type 
		{ 
			get
			{
				return _Type;
			}
			set
			{
				_Type = value;
				MarkColumnModified("Type");
			}
		}
		string _Type;

        [Column] 
		public string AccountName 
		{ 
			get
			{
				return _AccountName;
			}
			set
			{
				_AccountName = value;
				MarkColumnModified("AccountName");
			}
		}
		string _AccountName;

	}
    
	[TableName("ViecLam_TinhThanh")]
	[PrimaryKey("ID", autoIncrement=false)]
	[ExplicitColumns]
    public partial class ViecLam_TinhThanh : PetaPocoDB.Record<ViecLam_TinhThanh>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public string NameProvince 
		{ 
			get
			{
				return _NameProvince;
			}
			set
			{
				_NameProvince = value;
				MarkColumnModified("NameProvince");
			}
		}
		string _NameProvince;

        [Column] 
		public string Content 
		{ 
			get
			{
				return _Content;
			}
			set
			{
				_Content = value;
				MarkColumnModified("Content");
			}
		}
		string _Content;

        [Column] 
		public string NameProvinceSlug 
		{ 
			get
			{
				return _NameProvinceSlug;
			}
			set
			{
				_NameProvinceSlug = value;
				MarkColumnModified("NameProvinceSlug");
			}
		}
		string _NameProvinceSlug;

        [Column] 
		public string Title 
		{ 
			get
			{
				return _Title;
			}
			set
			{
				_Title = value;
				MarkColumnModified("Title");
			}
		}
		string _Title;

        [Column] 
		public DateTime DatePost 
		{ 
			get
			{
				return _DatePost;
			}
			set
			{
				_DatePost = value;
				MarkColumnModified("DatePost");
			}
		}
		DateTime _DatePost;

        [Column] 
		public DateTime? DateEnd 
		{ 
			get
			{
				return _DateEnd;
			}
			set
			{
				_DateEnd = value;
				MarkColumnModified("DateEnd");
			}
		}
		DateTime? _DateEnd;

        [Column] 
		public bool Acitve 
		{ 
			get
			{
				return _Acitve;
			}
			set
			{
				_Acitve = value;
				MarkColumnModified("Acitve");
			}
		}
		bool _Acitve;

        [Column] 
		public int? Price 
		{ 
			get
			{
				return _Price;
			}
			set
			{
				_Price = value;
				MarkColumnModified("Price");
			}
		}
		int? _Price;

        [Column] 
		public string Image 
		{ 
			get
			{
				return _Image;
			}
			set
			{
				_Image = value;
				MarkColumnModified("Image");
			}
		}
		string _Image;

	}
    
	[TableName("Upload")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class Upload : PetaPocoDB.Record<Upload>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public int? PostID 
		{ 
			get
			{
				return _PostID;
			}
			set
			{
				_PostID = value;
				MarkColumnModified("PostID");
			}
		}
		int? _PostID;

        [Column] 
		public string URL 
		{ 
			get
			{
				return _URL;
			}
			set
			{
				_URL = value;
				MarkColumnModified("URL");
			}
		}
		string _URL;

        [Column] 
		public bool? Active 
		{ 
			get
			{
				return _Active;
			}
			set
			{
				_Active = value;
				MarkColumnModified("Active");
			}
		}
		bool? _Active;

        [Column] 
		public string Title 
		{ 
			get
			{
				return _Title;
			}
			set
			{
				_Title = value;
				MarkColumnModified("Title");
			}
		}
		string _Title;

        [Column] 
		public string Type 
		{ 
			get
			{
				return _Type;
			}
			set
			{
				_Type = value;
				MarkColumnModified("Type");
			}
		}
		string _Type;

	}
    
	[TableName("Team")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class Team : PetaPocoDB.Record<Team>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public string NameGroup 
		{ 
			get
			{
				return _NameGroup;
			}
			set
			{
				_NameGroup = value;
				MarkColumnModified("NameGroup");
			}
		}
		string _NameGroup;

        [Column] 
		public string NameGroupSlug 
		{ 
			get
			{
				return _NameGroupSlug;
			}
			set
			{
				_NameGroupSlug = value;
				MarkColumnModified("NameGroupSlug");
			}
		}
		string _NameGroupSlug;

        [Column] 
		public DateTime DateCreated 
		{ 
			get
			{
				return _DateCreated;
			}
			set
			{
				_DateCreated = value;
				MarkColumnModified("DateCreated");
			}
		}
		DateTime _DateCreated;

        [Column] 
		public bool Active 
		{ 
			get
			{
				return _Active;
			}
			set
			{
				_Active = value;
				MarkColumnModified("Active");
			}
		}
		bool _Active;

        [Column] 
		public string Saying 
		{ 
			get
			{
				return _Saying;
			}
			set
			{
				_Saying = value;
				MarkColumnModified("Saying");
			}
		}
		string _Saying;

        [Column] 
		public long Owner 
		{ 
			get
			{
				return _Owner;
			}
			set
			{
				_Owner = value;
				MarkColumnModified("Owner");
			}
		}
		long _Owner;

        [Column] 
		public string Image 
		{ 
			get
			{
				return _Image;
			}
			set
			{
				_Image = value;
				MarkColumnModified("Image");
			}
		}
		string _Image;

	}
    
	[TableName("Post")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class Post : PetaPocoDB.Record<Post>  
    {
        [Column] 
		public long ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		long _ID;

        [Column] 
		public string Title 
		{ 
			get
			{
				return _Title;
			}
			set
			{
				_Title = value;
				MarkColumnModified("Title");
			}
		}
		string _Title;

        [Column] 
		public string Content 
		{ 
			get
			{
				return _Content;
			}
			set
			{
				_Content = value;
				MarkColumnModified("Content");
			}
		}
		string _Content;

        [Column] 
		public int? ObjectID 
		{ 
			get
			{
				return _ObjectID;
			}
			set
			{
				_ObjectID = value;
				MarkColumnModified("ObjectID");
			}
		}
		int? _ObjectID;

        [Column] 
		public string ObjectNameSlug 
		{ 
			get
			{
				return _ObjectNameSlug;
			}
			set
			{
				_ObjectNameSlug = value;
				MarkColumnModified("ObjectNameSlug");
			}
		}
		string _ObjectNameSlug;

        [Column] 
		public int? CateID 
		{ 
			get
			{
				return _CateID;
			}
			set
			{
				_CateID = value;
				MarkColumnModified("CateID");
			}
		}
		int? _CateID;

        [Column] 
		public string CateNameSlug 
		{ 
			get
			{
				return _CateNameSlug;
			}
			set
			{
				_CateNameSlug = value;
				MarkColumnModified("CateNameSlug");
			}
		}
		string _CateNameSlug;

        [Column] 
		public DateTime? CreatedDate 
		{ 
			get
			{
				return _CreatedDate;
			}
			set
			{
				_CreatedDate = value;
				MarkColumnModified("CreatedDate");
			}
		}
		DateTime? _CreatedDate;

        [Column] 
		public int? View 
		{ 
			get
			{
				return _View;
			}
			set
			{
				_View = value;
				MarkColumnModified("View");
			}
		}
		int? _View;

        [Column] 
		public long AccountID 
		{ 
			get
			{
				return _AccountID;
			}
			set
			{
				_AccountID = value;
				MarkColumnModified("AccountID");
			}
		}
		long _AccountID;

        [Column] 
		public string UserName 
		{ 
			get
			{
				return _UserName;
			}
			set
			{
				_UserName = value;
				MarkColumnModified("UserName");
			}
		}
		string _UserName;

        [Column] 
		public int? Vote 
		{ 
			get
			{
				return _Vote;
			}
			set
			{
				_Vote = value;
				MarkColumnModified("Vote");
			}
		}
		int? _Vote;

        [Column] 
		public string Picture 
		{ 
			get
			{
				return _Picture;
			}
			set
			{
				_Picture = value;
				MarkColumnModified("Picture");
			}
		}
		string _Picture;

        [Column] 
		public string Tags 
		{ 
			get
			{
				return _Tags;
			}
			set
			{
				_Tags = value;
				MarkColumnModified("Tags");
			}
		}
		string _Tags;

        [Column] 
		public string Video 
		{ 
			get
			{
				return _Video;
			}
			set
			{
				_Video = value;
				MarkColumnModified("Video");
			}
		}
		string _Video;

        [Column] 
		public bool? Spam 
		{ 
			get
			{
				return _Spam;
			}
			set
			{
				_Spam = value;
				MarkColumnModified("Spam");
			}
		}
		bool? _Spam;

        [Column] 
		public bool? Active 
		{ 
			get
			{
				return _Active;
			}
			set
			{
				_Active = value;
				MarkColumnModified("Active");
			}
		}
		bool? _Active;

        [Column] 
		public int? Comment 
		{ 
			get
			{
				return _Comment;
			}
			set
			{
				_Comment = value;
				MarkColumnModified("Comment");
			}
		}
		int? _Comment;

        [Column] 
		public long? UrlID 
		{ 
			get
			{
				return _UrlID;
			}
			set
			{
				_UrlID = value;
				MarkColumnModified("UrlID");
			}
		}
		long? _UrlID;

        [Column] 
		public string Url 
		{ 
			get
			{
				return _Url;
			}
			set
			{
				_Url = value;
				MarkColumnModified("Url");
			}
		}
		string _Url;

        [Column] 
		public DateTime? ModifiedDate 
		{ 
			get
			{
				return _ModifiedDate;
			}
			set
			{
				_ModifiedDate = value;
				MarkColumnModified("ModifiedDate");
			}
		}
		DateTime? _ModifiedDate;

        [Column] 
		public string ModifiedBy 
		{ 
			get
			{
				return _ModifiedBy;
			}
			set
			{
				_ModifiedBy = value;
				MarkColumnModified("ModifiedBy");
			}
		}
		string _ModifiedBy;

	}
    
	[TableName("MembersGroup")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class MembersGroup : PetaPocoDB.Record<MembersGroup>  
    {
        [Column] 
		public long ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		long _ID;

        [Column] 
		public int GroupID 
		{ 
			get
			{
				return _GroupID;
			}
			set
			{
				_GroupID = value;
				MarkColumnModified("GroupID");
			}
		}
		int _GroupID;

        [Column] 
		public long AccountID 
		{ 
			get
			{
				return _AccountID;
			}
			set
			{
				_AccountID = value;
				MarkColumnModified("AccountID");
			}
		}
		long _AccountID;

        [Column] 
		public DateTime JoiningDate 
		{ 
			get
			{
				return _JoiningDate;
			}
			set
			{
				_JoiningDate = value;
				MarkColumnModified("JoiningDate");
			}
		}
		DateTime _JoiningDate;

        [Column] 
		public bool Activte 
		{ 
			get
			{
				return _Activte;
			}
			set
			{
				_Activte = value;
				MarkColumnModified("Activte");
			}
		}
		bool _Activte;

	}
    
	[TableName("ForumInRole")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class ForumInRole : PetaPocoDB.Record<ForumInRole>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public string UserName 
		{ 
			get
			{
				return _UserName;
			}
			set
			{
				_UserName = value;
				MarkColumnModified("UserName");
			}
		}
		string _UserName;

        [Column] 
		public long AccountID 
		{ 
			get
			{
				return _AccountID;
			}
			set
			{
				_AccountID = value;
				MarkColumnModified("AccountID");
			}
		}
		long _AccountID;

        [Column] 
		public bool? Active 
		{ 
			get
			{
				return _Active;
			}
			set
			{
				_Active = value;
				MarkColumnModified("Active");
			}
		}
		bool? _Active;

        [Column] 
		public int ForumID 
		{ 
			get
			{
				return _ForumID;
			}
			set
			{
				_ForumID = value;
				MarkColumnModified("ForumID");
			}
		}
		int _ForumID;

	}
    
	[TableName("Forum")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class Forum : PetaPocoDB.Record<Forum>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public string ForumName 
		{ 
			get
			{
				return _ForumName;
			}
			set
			{
				_ForumName = value;
				MarkColumnModified("ForumName");
			}
		}
		string _ForumName;

        [Column] 
		public int? CateID 
		{ 
			get
			{
				return _CateID;
			}
			set
			{
				_CateID = value;
				MarkColumnModified("CateID");
			}
		}
		int? _CateID;

        [Column] 
		public string ForumNameSlug 
		{ 
			get
			{
				return _ForumNameSlug;
			}
			set
			{
				_ForumNameSlug = value;
				MarkColumnModified("ForumNameSlug");
			}
		}
		string _ForumNameSlug;

        [Column] 
		public int? Order 
		{ 
			get
			{
				return _Order;
			}
			set
			{
				_Order = value;
				MarkColumnModified("Order");
			}
		}
		int? _Order;

        [Column] 
		public bool? Active 
		{ 
			get
			{
				return _Active;
			}
			set
			{
				_Active = value;
				MarkColumnModified("Active");
			}
		}
		bool? _Active;

	}
    
	[TableName("Comment")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class Comment : PetaPocoDB.Record<Comment>  
    {
        [Column] 
		public long ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		long _ID;

        [Column] 
		public string Content 
		{ 
			get
			{
				return _Content;
			}
			set
			{
				_Content = value;
				MarkColumnModified("Content");
			}
		}
		string _Content;

        [Column] 
		public long? ObjID 
		{ 
			get
			{
				return _ObjID;
			}
			set
			{
				_ObjID = value;
				MarkColumnModified("ObjID");
			}
		}
		long? _ObjID;

        [Column] 
		public DateTime? Date 
		{ 
			get
			{
				return _Date;
			}
			set
			{
				_Date = value;
				MarkColumnModified("Date");
			}
		}
		DateTime? _Date;

        [Column] 
		public bool Spam 
		{ 
			get
			{
				return _Spam;
			}
			set
			{
				_Spam = value;
				MarkColumnModified("Spam");
			}
		}
		bool _Spam;

        [Column] 
		public string Username 
		{ 
			get
			{
				return _Username;
			}
			set
			{
				_Username = value;
				MarkColumnModified("Username");
			}
		}
		string _Username;

        [Column] 
		public bool? Activate 
		{ 
			get
			{
				return _Activate;
			}
			set
			{
				_Activate = value;
				MarkColumnModified("Activate");
			}
		}
		bool? _Activate;

        [Column] 
		public long AccountID 
		{ 
			get
			{
				return _AccountID;
			}
			set
			{
				_AccountID = value;
				MarkColumnModified("AccountID");
			}
		}
		long _AccountID;

        [Column] 
		public long? ParentID 
		{ 
			get
			{
				return _ParentID;
			}
			set
			{
				_ParentID = value;
				MarkColumnModified("ParentID");
			}
		}
		long? _ParentID;

        [Column] 
		public string ObjectType 
		{ 
			get
			{
				return _ObjectType;
			}
			set
			{
				_ObjectType = value;
				MarkColumnModified("ObjectType");
			}
		}
		string _ObjectType;

        [Column] 
		public string Target_link 
		{ 
			get
			{
				return _Target_link;
			}
			set
			{
				_Target_link = value;
				MarkColumnModified("Target_link");
			}
		}
		string _Target_link;

        [Column] 
		public string Target_object_name 
		{ 
			get
			{
				return _Target_object_name;
			}
			set
			{
				_Target_object_name = value;
				MarkColumnModified("Target_object_name");
			}
		}
		string _Target_object_name;

        [Column] 
		public long ReceiverID 
		{ 
			get
			{
				return _ReceiverID;
			}
			set
			{
				_ReceiverID = value;
				MarkColumnModified("ReceiverID");
			}
		}
		long _ReceiverID;

        [Column] 
		public string ReceiverUsername 
		{ 
			get
			{
				return _ReceiverUsername;
			}
			set
			{
				_ReceiverUsername = value;
				MarkColumnModified("ReceiverUsername");
			}
		}
		string _ReceiverUsername;

        [Column] 
		public string Status 
		{ 
			get
			{
				return _Status;
			}
			set
			{
				_Status = value;
				MarkColumnModified("Status");
			}
		}
		string _Status;

        [Column] 
		public string Author_IP 
		{ 
			get
			{
				return _Author_IP;
			}
			set
			{
				_Author_IP = value;
				MarkColumnModified("Author_IP");
			}
		}
		string _Author_IP;

        [Column] 
		public string Agent 
		{ 
			get
			{
				return _Agent;
			}
			set
			{
				_Agent = value;
				MarkColumnModified("Agent");
			}
		}
		string _Agent;

	}
    
	[TableName("Clip")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class Clip : PetaPocoDB.Record<Clip>  
    {
        [Column] 
		public long ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		long _ID;

        [Column] 
		public string Title 
		{ 
			get
			{
				return _Title;
			}
			set
			{
				_Title = value;
				MarkColumnModified("Title");
			}
		}
		string _Title;

        [Column] 
		public string URL 
		{ 
			get
			{
				return _URL;
			}
			set
			{
				_URL = value;
				MarkColumnModified("URL");
			}
		}
		string _URL;

        [Column] 
		public string Description 
		{ 
			get
			{
				return _Description;
			}
			set
			{
				_Description = value;
				MarkColumnModified("Description");
			}
		}
		string _Description;

        [Column] 
		public bool? Active 
		{ 
			get
			{
				return _Active;
			}
			set
			{
				_Active = value;
				MarkColumnModified("Active");
			}
		}
		bool? _Active;

        [Column] 
		public DateTime? CreatedDate 
		{ 
			get
			{
				return _CreatedDate;
			}
			set
			{
				_CreatedDate = value;
				MarkColumnModified("CreatedDate");
			}
		}
		DateTime? _CreatedDate;

        [Column] 
		public bool? Feature 
		{ 
			get
			{
				return _Feature;
			}
			set
			{
				_Feature = value;
				MarkColumnModified("Feature");
			}
		}
		bool? _Feature;

        [Column] 
		public long AccountID 
		{ 
			get
			{
				return _AccountID;
			}
			set
			{
				_AccountID = value;
				MarkColumnModified("AccountID");
			}
		}
		long _AccountID;

        [Column] 
		public string Username 
		{ 
			get
			{
				return _Username;
			}
			set
			{
				_Username = value;
				MarkColumnModified("Username");
			}
		}
		string _Username;

        [Column] 
		public int View 
		{ 
			get
			{
				return _View;
			}
			set
			{
				_View = value;
				MarkColumnModified("View");
			}
		}
		int _View;

	}
    
	[TableName("QueueEMail")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class QueueEMail : PetaPocoDB.Record<QueueEMail>  
    {
        [Column] 
		public long ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		long _ID;

        [Column] 
		public string FromAddress 
		{ 
			get
			{
				return _FromAddress;
			}
			set
			{
				_FromAddress = value;
				MarkColumnModified("FromAddress");
			}
		}
		string _FromAddress;

        [Column] 
		public string ToAddress 
		{ 
			get
			{
				return _ToAddress;
			}
			set
			{
				_ToAddress = value;
				MarkColumnModified("ToAddress");
			}
		}
		string _ToAddress;

        [Column] 
		public string Subject 
		{ 
			get
			{
				return _Subject;
			}
			set
			{
				_Subject = value;
				MarkColumnModified("Subject");
			}
		}
		string _Subject;

        [Column] 
		public string Body 
		{ 
			get
			{
				return _Body;
			}
			set
			{
				_Body = value;
				MarkColumnModified("Body");
			}
		}
		string _Body;

        [Column] 
		public DateTime? SentDate 
		{ 
			get
			{
				return _SentDate;
			}
			set
			{
				_SentDate = value;
				MarkColumnModified("SentDate");
			}
		}
		DateTime? _SentDate;

        [Column] 
		public short SentTimes 
		{ 
			get
			{
				return _SentTimes;
			}
			set
			{
				_SentTimes = value;
				MarkColumnModified("SentTimes");
			}
		}
		short _SentTimes;

        [Column] 
		public bool IsSent 
		{ 
			get
			{
				return _IsSent;
			}
			set
			{
				_IsSent = value;
				MarkColumnModified("IsSent");
			}
		}
		bool _IsSent;

        [Column] 
		public bool IsSelected 
		{ 
			get
			{
				return _IsSelected;
			}
			set
			{
				_IsSelected = value;
				MarkColumnModified("IsSelected");
			}
		}
		bool _IsSelected;

        [Column] 
		public string SenderName 
		{ 
			get
			{
				return _SenderName;
			}
			set
			{
				_SenderName = value;
				MarkColumnModified("SenderName");
			}
		}
		string _SenderName;

        [Column] 
		public string ReceiverName 
		{ 
			get
			{
				return _ReceiverName;
			}
			set
			{
				_ReceiverName = value;
				MarkColumnModified("ReceiverName");
			}
		}
		string _ReceiverName;

	}
    
	[TableName("EmailPermission")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class EmailPermission : PetaPocoDB.Record<EmailPermission>  
    {
        [Column] 
		public long ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		long _ID;

        [Column] 
		public long AccountID 
		{ 
			get
			{
				return _AccountID;
			}
			set
			{
				_AccountID = value;
				MarkColumnModified("AccountID");
			}
		}
		long _AccountID;

        [Column] 
		public string Type 
		{ 
			get
			{
				return _Type;
			}
			set
			{
				_Type = value;
				MarkColumnModified("Type");
			}
		}
		string _Type;

        [Column] 
		public bool Allow 
		{ 
			get
			{
				return _Allow;
			}
			set
			{
				_Allow = value;
				MarkColumnModified("Allow");
			}
		}
		bool _Allow;

	}
    
	[TableName("Options")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class Option : PetaPocoDB.Record<Option>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public int VfCMS_ID 
		{ 
			get
			{
				return _VfCMS_ID;
			}
			set
			{
				_VfCMS_ID = value;
				MarkColumnModified("VfCMS_ID");
			}
		}
		int _VfCMS_ID;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

        [Column] 
		public string Value 
		{ 
			get
			{
				return _Value;
			}
			set
			{
				_Value = value;
				MarkColumnModified("Value");
			}
		}
		string _Value;

        [Column] 
		public string autoload 
		{ 
			get
			{
				return _autoload;
			}
			set
			{
				_autoload = value;
				MarkColumnModified("autoload");
			}
		}
		string _autoload;

	}
}


