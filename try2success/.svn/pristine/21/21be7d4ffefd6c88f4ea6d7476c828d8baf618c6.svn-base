using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Xml;
using System.Data;
using System.Net;
using System.IO;
using System.Text;

namespace hoachdinhtuonglai.Data.Core
{
    public class AutoFeed
    {
        private string _Title;

        public string Title
        {
            get { return _Title; }
            set { _Title = value; }
        }
        private string _Description;

        public string Description
        {
            get { return _Description; }
            set { _Description = value; }
        }
        private string _Content;

        public string Content
        {
            get { return _Content; }
            set { _Content = value; }
        }
        private string _Link;//or url

        public string Link
        {
            get { return _Link; }
            set { _Link = value; }
        }
        private string _PubDate;

        public string PubDate
        {
            get { return _PubDate; }
            set { _PubDate = value; }
        }
    }

    public class AutoFeedCollection : List<AutoFeed>
    {
        public AutoFeedCollection() { }
        public AutoFeedCollection(IEnumerable<AutoFeed> list) : base(list) { }
    }

    public static class AutoFeedDA
    {
        public static string url_trangchu = "http://vnexpress.net/rss/gl/trang-chu.rss";
        public static AutoFeedCollection SelectByUrlFeed(string url)
        {
            XmlTextReader reader = new XmlTextReader(url);
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            AutoFeedCollection listFeed = new AutoFeedCollection();
            for (int i = 0; i < ds.Tables["item"].Rows.Count; ++i)
            {
                AutoFeed feed = new AutoFeed();
                feed.Link = "/?page=feed&url=" + ds.Tables["item"].Rows[i]["link"];
                feed.Description = ds.Tables["item"].Rows[i]["description"].ToString().Replace("href=\"", "href=\"/?page=feed&url=\"");
                feed.Title = ds.Tables["item"].Rows[i]["title"].ToString();
                listFeed.Add(feed);
            }

            return listFeed;
        }

        public static string GetHTML(string url)
        {
            if (string.IsNullOrEmpty(url))
            {
                return "";
            }

            string html = "";
            HttpWebRequest request = (HttpWebRequest)HttpWebRequest.Create(url);
            HttpWebResponse response = (HttpWebResponse)request.GetResponse();
            Stream responseStream = response.GetResponseStream();
            StreamReader readerStream = new StreamReader(responseStream, Encoding.UTF8);
            html = readerStream.ReadToEnd();
            response.Close();
            readerStream.Close();
            return html;
        }

    }
}