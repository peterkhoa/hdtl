using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.ComponentModel;

namespace hoachdinhtuonglai
{
    public class Categories
    {
        private int _ID;

        public int ID
        {
            get { return _ID; }
            set { _ID = value; }
        }

        private string _CateName;

        public string CateName
        {
            get { return _CateName; }
            set { _CateName = value; }
        }

        private string _CateSlugName;

        public string CateSlugName
        {
            get { return _CateSlugName; }
            set { _CateSlugName = value; }
        }

        private System.Nullable<int> _Order;

        public System.Nullable<int> Order
        {
            get { return _Order; }
            set { _Order = value; }
        }

        private System.Nullable<bool> _Active;

        public System.Nullable<bool> Active
        {
            get { return _Active; }
            set { _Active = value; }
        }
    }

    public class CategoriesCollection : List<Categories>
    {
        public CategoriesCollection() { }
        public CategoriesCollection(IEnumerable<Categories> list) : base(list) { }
    }

    [DataObject]
    public static class CategoriesDA
    {
        static Database petapoco = ConnectionPP.getConnection();
        public static CategoriesCollection SelectAll()
        {
            //var petapoco = ConnectionPP.getConnection();

            petapoco.EnableAutoSelect = false;
            petapoco.EnableNamedParams = false;
            petapoco.ForceDateTimesToUtc = false;

            CategoriesCollection acc = new CategoriesCollection(petapoco.Fetch<Categories>(@"Select * from Categories"));
            return acc;
        }

        public static CategoriesCollection SelectAllNonActive()
        {
            //var petapoco = ConnectionPP.getConnection();

            petapoco.EnableAutoSelect = false;
            petapoco.EnableNamedParams = false;
            petapoco.ForceDateTimesToUtc = false;

            CategoriesCollection acc = new CategoriesCollection(petapoco.Fetch<Categories>(@"Select * from Categories where Activate=0"));
            return acc;
        }



        public static Categories SelectByID(long id)
        {
            //var petapoco = ConnectionPP.getConnection();

            petapoco.EnableNamedParams = false;
            petapoco.EnableAutoSelect = false;
            petapoco.ForceDateTimesToUtc = false;

            Categories ac = petapoco.FirstOrDefault<Categories>(@"Select * from Categories where id=@0", id);

            return ac;
        }

        public static CategoriesCollection SelectByCateNameSlug(string name)
        {
            name = name.Trim().ToLower();
            //var petapoco = ConnectionPP.getConnection();

            petapoco.EnableNamedParams = false;
            petapoco.EnableAutoSelect = false;
            petapoco.ForceDateTimesToUtc = false;

            CategoriesCollection ac = new CategoriesCollection(petapoco.Fetch<Categories>(@"Select * from Categories where CateSlugName=@0", name));

            return ac;
        }

        public static Categories SelectByCateName(string name)
        {

            //var petapoco = ConnectionPP.getConnection();

            petapoco.EnableNamedParams = false;
            petapoco.EnableAutoSelect = false;
            petapoco.ForceDateTimesToUtc = false;

            Categories ac = (petapoco.FirstOrDefault<Categories>(@"Select * from Categories where CateName=@0", name));

            return ac;
        }


        public static CategoriesCollection SelectCategoriesSByPageSize(int page, int pagesize)
        {
            if (page == 0)
                page = 1;
            //var petapoco = ConnectionPP.getConnection();

            petapoco.EnableAutoSelect = false;
            petapoco.ForceDateTimesToUtc = false;

            CategoriesCollection acc = new CategoriesCollection(petapoco.Fetch<Categories>(@"Select * from Categories where Activate=1").Skip((page - 1) * pagesize).Take(page * pagesize));

            return acc;
        }

        public static long Update(Categories Categories)
        {
            //var petapoco = ConnectionPP.getConnection();

            petapoco.EnableAutoSelect = false;
            petapoco.EnableNamedParams = false;
            petapoco.ForceDateTimesToUtc = false;

            long x = petapoco.Update("Categories", "ID", Categories, Categories.ID);
            return x;
        }

        public static long Insert(Categories Categories)
        {
            //var petapoco = ConnectionPP.getConnection();

            petapoco.EnableAutoSelect = false;

            petapoco.ForceDateTimesToUtc = false;

            var x = petapoco.Insert("Categories", "ID", true, Categories);

            return long.Parse(x.ToString());
        }

        public static long Delete(Categories Categories)
        {
            //var petapoco = ConnectionPP.getConnection();

            petapoco.EnableAutoSelect = false;
            petapoco.EnableNamedParams = false;
            petapoco.ForceDateTimesToUtc = false;

            long x = petapoco.Delete("Categories", "ID", Categories, Categories.ID);

            return x;
        }
    }
}
